/* eslint-disable */
export default async () => {
    const t = {
        ["./city/model/city.entity"]: await import("./city/model/city.entity"),
        ["./address/model/address.entity"]: await import("./address/model/address.entity"),
        ["./state/model/state.entity"]: await import("./state/model/state.entity"),
        ["./user/model/user.entity"]: await import("./user/model/user.entity"),
        ["./order/model/order.entity"]: await import("./order/model/order.entity"),
        ["./cart-product/model/cart-product.entity"]: await import("./cart-product/model/cart-product.entity"),
        ["./product/model/product.entity"]: await import("./product/model/product.entity"),
        ["./cart/model/cart.entity"]: await import("./cart/model/cart.entity"),
        ["./category/model/category.entity"]: await import("./category/model/category.entity"),
        ["./order-product/model/order-product.entity"]: await import("./order-product/model/order-product.entity"),
        ["./payment/model/payment.entity"]: await import("./payment/model/payment.entity"),
        ["./payment-status/model/payment-status.entity"]: await import("./payment-status/model/payment-status.entity"),
        ["./state/dtos/returnState.dto"]: await import("./state/dtos/returnState.dto"),
        ["./city/dtos/returnCity.dto"]: await import("./city/dtos/returnCity.dto"),
        ["./address/dtos/returnAdress.dto"]: await import("./address/dtos/returnAdress.dto"),
        ["./category/dtos/return-category.dto"]: await import("./category/dtos/return-category.dto"),
        ["./product/dtos/return-product.dto"]: await import("./product/dtos/return-product.dto"),
        ["./dtos/pagination.dto"]: await import("./dtos/pagination.dto"),
        ["./cart/dtos/return-cart.dto"]: await import("./cart/dtos/return-cart.dto"),
        ["./cart-product/dtos/return-cart-product.dto"]: await import("./cart-product/dtos/return-cart-product.dto"),
        ["./payment-status/dtos/return-payment-status.dto"]: await import("./payment-status/dtos/return-payment-status.dto"),
        ["./order/dtos/return-order.dto"]: await import("./order/dtos/return-order.dto"),
        ["./user/dtos/returnUser.dto"]: await import("./user/dtos/returnUser.dto"),
        ["./payment/dtos/return-payment.dto"]: await import("./payment/dtos/return-payment.dto"),
        ["./order-product/dtos/return-order-product.dto"]: await import("./order-product/dtos/return-order-product.dto"),
        ["./correios/dtos/return-cep.dto"]: await import("./correios/dtos/return-cep.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/dtos/createUser.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, cpf: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./state/model/state.entity"), { "StateEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, uf: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, cities: { required: false, type: () => [t["./city/model/city.entity"].CityEntity] } } }], [import("./city/model/city.entity"), { "CityEntity": { id: { required: true, type: () => Number }, stateId: { required: true, type: () => Number }, name: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, addresses: { required: false, type: () => [t["./address/model/address.entity"].AddressEntity] }, state: { required: false, type: () => t["./state/model/state.entity"].StateEntity } } }], [import("./address/model/address.entity"), { "AddressEntity": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, complement: { required: true, type: () => String }, numberAddress: { required: true, type: () => Number }, cep: { required: true, type: () => String }, cityId: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, user: { required: false, type: () => t["./user/model/user.entity"].UserEntity }, city: { required: false, type: () => t["./city/model/city.entity"].CityEntity }, orders: { required: false, type: () => [t["./order/model/order.entity"].OrderEntity] } } }], [import("./cart/model/cart.entity"), { "CartEntity": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, active: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, cartProduct: { required: false, type: () => [t["./cart-product/model/cart-product.entity"].CartProductEntity] } } }], [import("./cart-product/model/cart-product.entity"), { "CartProductEntity": { id: { required: true, type: () => Number }, cartId: { required: true, type: () => Number }, productId: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, product: { required: false, type: () => t["./product/model/product.entity"].ProductEntity }, cart: { required: false, type: () => t["./cart/model/cart.entity"].CartEntity } } }], [import("./category/model/category.entity"), { "CategoryEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, products: { required: false, type: () => [t["./product/model/product.entity"].ProductEntity] } } }], [import("./product/model/product.entity"), { "ProductEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, categoryId: { required: true, type: () => Number }, price: { required: true, type: () => Number }, image: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, cartProduct: { required: false, type: () => [t["./cart-product/model/cart-product.entity"].CartProductEntity] }, category: { required: false, type: () => t["./category/model/category.entity"].CategoryEntity }, orderProduct: { required: false, type: () => [t["./order-product/model/order-product.entity"].OrderProductEntity] } } }], [import("./order-product/model/order-product.entity"), { "OrderProductEntity": { id: { required: true, type: () => Number }, orderId: { required: true, type: () => Number }, productId: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, price: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, order: { required: false, type: () => t["./order/model/order.entity"].OrderEntity }, product: { required: false, type: () => t["./product/model/product.entity"].ProductEntity } } }], [import("./payment-status/model/payment-status.entity"), { "PaymentStatusEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, payments: { required: false, type: () => [t["./payment/model/payment.entity"].PaymentEntity] } } }], [import("./payment/model/payment.entity"), { "PaymentEntity": { id: { required: true, type: () => Number }, statusId: { required: true, type: () => Number }, price: { required: true, type: () => Number }, discount: { required: true, type: () => Number }, finalPrice: { required: true, type: () => Number }, type: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, orders: { required: false, type: () => [t["./order/model/order.entity"].OrderEntity] }, paymentStatus: { required: false, type: () => t["./payment-status/model/payment-status.entity"].PaymentStatusEntity } } }], [import("./order/model/order.entity"), { "OrderEntity": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, addressId: { required: true, type: () => Number }, date: { required: true, type: () => Date }, paymentId: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, user: { required: false, type: () => t["./user/model/user.entity"].UserEntity }, address: { required: false, type: () => t["./address/model/address.entity"].AddressEntity }, payment: { required: false, type: () => t["./payment/model/payment.entity"].PaymentEntity }, ordersProduct: { required: false, type: () => [t["./order-product/model/order-product.entity"].OrderProductEntity] }, amountProducts: { required: false, type: () => Number } } }], [import("./user/model/user.entity"), { "UserEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, cpf: { required: true, type: () => String }, password: { required: true, type: () => String }, typeUser: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, addresses: { required: false, type: () => [t["./address/model/address.entity"].AddressEntity] }, orders: { required: false, type: () => [t["./order/model/order.entity"].OrderEntity] } } }], [import("./user/dtos/update-password.dto"), { "UpdatePasswordDTO": { lastPassword: { required: true, type: () => String }, newPassword: { required: true, type: () => String } } }], [import("./state/dtos/returnState.dto"), { "ReturnStateDto": { name: { required: true, type: () => String } } }], [import("./city/dtos/returnCity.dto"), { "ReturnCityDto": { name: { required: true, type: () => String }, state: { required: false, type: () => t["./state/dtos/returnState.dto"].ReturnStateDto } } }], [import("./address/dtos/returnAdress.dto"), { "ReturnAddressDto": { id: { required: true, type: () => Number }, complement: { required: true, type: () => String }, numberAddress: { required: true, type: () => Number }, cep: { required: true, type: () => String }, city: { required: false, type: () => t["./city/dtos/returnCity.dto"].ReturnCityDto } } }], [import("./user/dtos/returnUser.dto"), { "ReturnUserDto": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, email: { required: true, type: () => String }, phone: { required: true, type: () => String }, cpf: { required: true, type: () => String }, addresses: { required: false, type: () => [t["./address/dtos/returnAdress.dto"].ReturnAddressDto] } } }], [import("./auth/dtos/loginPayload.dto"), { "LoginPayload": { id: { required: true, type: () => Number }, typeUser: { required: true, type: () => Number } } }], [import("./address/dtos/createAddress.dto"), { "CreateAddressDto": { complement: { required: true, type: () => String }, numberAddress: { required: true, type: () => Number }, cep: { required: true, type: () => String }, cityId: { required: true, type: () => Number } } }], [import("./auth/dtos/login.dto"), { "LoginDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./category/dtos/create-Category.dto"), { "CreateCategory": { name: { required: true, type: () => String } } }], [import("./product/dtos/return-product.dto"), { "ReturnProduct": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, price: { required: true, type: () => Number }, image: { required: true, type: () => String }, category: { required: false, type: () => t["./category/dtos/return-category.dto"].ReturnCategory } } }], [import("./category/dtos/return-category.dto"), { "ReturnCategory": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, amountProducts: { required: false, type: () => Number }, products: { required: false, type: () => [t["./product/dtos/return-product.dto"].ReturnProduct] } } }], [import("./category/dtos/update-category.dto"), { "UpdateCategory": { name: { required: true, type: () => String } } }], [import("./product/dtos/create-product.dto"), { "CreateProductDTO": { categoryId: { required: true, type: () => Number }, name: { required: true, type: () => String }, price: { required: true, type: () => Number }, image: { required: true, type: () => String } } }], [import("./product/dtos/update-procut.dto"), { "UpdateProductDTO": { categoryId: { required: true, type: () => Number }, name: { required: true, type: () => String }, price: { required: true, type: () => Number }, image: { required: true, type: () => String } } }], [import("./dtos/pagination.dto"), { "PaginationMeta": { itemsPerPage: { required: true, type: () => Number }, totalItems: { required: true, type: () => Number }, currentPage: { required: true, type: () => Number }, totalPages: { required: true, type: () => Number } }, "Pagination": { meta: { required: true, type: () => t["./dtos/pagination.dto"].PaginationMeta }, data: { required: true } } }], [import("./cart/dtos/insert-cart.dto"), { "InsertCartDTO": { productId: { required: true, type: () => Number }, amount: { required: true, type: () => Number } } }], [import("./cart/dtos/update-cart.dto"), { "UpdateCartDTO": { productId: { required: true, type: () => Number }, amount: { required: true, type: () => Number } } }], [import("./cart-product/dtos/return-cart-product.dto"), { "ReturnCartProductDTO": { id: { required: true, type: () => Number }, cartId: { required: true, type: () => Number }, productId: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, product: { required: false, type: () => t["./product/dtos/return-product.dto"].ReturnProduct }, cart: { required: false, type: () => t["./cart/dtos/return-cart.dto"].ReturnCartDTO } } }], [import("./cart/dtos/return-cart.dto"), { "ReturnCartDTO": { id: { required: true, type: () => Number }, cartProduct: { required: false, type: () => [t["./cart-product/dtos/return-cart-product.dto"].ReturnCartProductDTO] } } }], [import("./order/dtos/create-order.dto"), { "CreateOrderDTO": { addressId: { required: true, type: () => Number }, amountPayments: { required: false, type: () => Number }, codePix: { required: false, type: () => String }, datePayment: { required: false, type: () => String } } }], [import("./payment/model/payment-credit-card.entity"), { "PaymentCreditCardEntity": { amountPayments: { required: true, type: () => Number } } }], [import("./payment/model/payment-pix.entity"), { "PaymentPixEntity": { code: { required: true, type: () => String }, datePayment: { required: true, type: () => Date } } }], [import("./order-product/dtos/return-group-order.dto"), { "ReturnGroupOrder": { order_id: { required: true, type: () => Number }, total: { required: true, type: () => String } } }], [import("./payment-status/dtos/return-payment-status.dto"), { "ReturnPaymentStatus": { id: { required: true, type: () => Number }, name: { required: true, type: () => String } } }], [import("./payment/dtos/return-payment.dto"), { "ReturnPaymentDTO": { id: { required: true, type: () => Number }, statusId: { required: true, type: () => Number }, price: { required: true, type: () => Number }, discount: { required: true, type: () => Number }, finalPrice: { required: true, type: () => Number }, type: { required: true, type: () => String }, paymentStatus: { required: false, type: () => t["./payment-status/dtos/return-payment-status.dto"].ReturnPaymentStatus } } }], [import("./order-product/dtos/return-order-product.dto"), { "ReturnOrderProductDTO": { id: { required: true, type: () => Number }, orderId: { required: true, type: () => Number }, productId: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, price: { required: true, type: () => Number }, order: { required: false, type: () => t["./order/dtos/return-order.dto"].ReturnOrderDTO }, product: { required: false, type: () => t["./product/dtos/return-product.dto"].ReturnProduct } } }], [import("./order/dtos/return-order.dto"), { "ReturnOrderDTO": { id: { required: true, type: () => Number }, date: { required: true, type: () => String }, userId: { required: true, type: () => Number }, addressId: { required: true, type: () => Number }, paymentId: { required: true, type: () => Number }, user: { required: false, type: () => t["./user/dtos/returnUser.dto"].ReturnUserDto }, address: { required: false, type: () => t["./address/dtos/returnAdress.dto"].ReturnAddressDto }, payment: { required: false, type: () => t["./payment/dtos/return-payment.dto"].ReturnPaymentDTO }, ordersProduct: { required: false, type: () => [t["./order-product/dtos/return-order-product.dto"].ReturnOrderProductDTO] }, amountProducts: { required: false, type: () => Number } } }], [import("./correios/dtos/return-cep-external.dto"), { "ReturnCepExternal": { cep: { required: true, type: () => String }, logradouro: { required: true, type: () => String }, complemento: { required: true, type: () => String }, bairro: { required: true, type: () => String }, localidade: { required: true, type: () => String }, uf: { required: true, type: () => String }, ddd: { required: true, type: () => String }, erro: { required: false, type: () => String } } }], [import("./correios/dtos/return-cep.dto"), { "ReturnCep": { cep: { required: true, type: () => String }, publicPlace: { required: true, type: () => String }, complement: { required: true, type: () => String }, neighborhood: { required: true, type: () => String }, city: { required: true, type: () => String }, uf: { required: true, type: () => String }, ddd: { required: true, type: () => String }, cityId: { required: false, type: () => Number }, stateId: { required: false, type: () => Number } } }]], "controllers": [[import("./user/user.controller"), { "UserController": { "createAdmUser": { type: t["./user/model/user.entity"].UserEntity }, "createUser": { type: t["./user/model/user.entity"].UserEntity }, "getAllUsers": { type: [t["./user/dtos/returnUser.dto"].ReturnUserDto] }, "getUserById": { type: t["./user/dtos/returnUser.dto"].ReturnUserDto }, "updatePasswordUser": { type: t["./user/model/user.entity"].UserEntity }, "getInfoUser": { type: t["./user/dtos/returnUser.dto"].ReturnUserDto } } }], [import("./state/state.controller"), { "StateController": { "getAllState": { type: [t["./state/model/state.entity"].StateEntity] } } }], [import("./city/city.controller"), { "CityController": { "getAllCitiesByStateid": { type: [t["./city/model/city.entity"].CityEntity] } } }], [import("./address/address.controller"), { "AddressController": { "createAddress": { type: t["./address/model/address.entity"].AddressEntity }, "findAddressByUserId": { type: [t["./address/dtos/returnAdress.dto"].ReturnAddressDto] } } }], [import("./auth/auth.controller"), { "AuthController": { "login": { type: Object } } }], [import("./category/category.controller"), { "CategoryController": { "findAllCategories": { type: [t["./category/dtos/return-category.dto"].ReturnCategory] }, "findCategoryById": { type: t["./category/dtos/return-category.dto"].ReturnCategory }, "createCategory": { type: t["./category/model/category.entity"].CategoryEntity }, "editCategory": { type: t["./category/model/category.entity"].CategoryEntity }, "deleteCategory": {} } }], [import("./product/product.controller"), { "ProductController": { "findAll": { type: [t["./product/dtos/return-product.dto"].ReturnProduct] }, "findAllPage": {}, "findProductById": { type: t["./product/dtos/return-product.dto"].ReturnProduct }, "createProduct": { type: t["./product/model/product.entity"].ProductEntity }, "deleteProduct": {}, "updateProduct": { type: t["./product/model/product.entity"].ProductEntity } } }], [import("./cart/cart.controller"), { "CartController": { "createCart": { type: t["./cart/dtos/return-cart.dto"].ReturnCartDTO }, "findCartByUserId": { type: t["./cart/dtos/return-cart.dto"].ReturnCartDTO }, "clearCart": {}, "deleteProductCart": {}, "updateProductInCart": { type: t["./cart/dtos/return-cart.dto"].ReturnCartDTO } } }], [import("./order/order.controller"), { "OrderController": { "createOrder": { type: t["./order/model/order.entity"].OrderEntity }, "findOrdersByUserId": { type: [t["./order/model/order.entity"].OrderEntity] }, "findAllOrders": { type: [t["./order/dtos/return-order.dto"].ReturnOrderDTO] }, "findOrderById": { type: t["./order/dtos/return-order.dto"].ReturnOrderDTO } } }], [import("./correios/correios.controller"), { "CorreiosController": { "priceDelivery": { type: Object }, "findAll": { type: t["./correios/dtos/return-cep.dto"].ReturnCep } } }]] } };
};